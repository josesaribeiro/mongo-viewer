"use strict";angular.module("App",["ui.router","ngMaterial","app.controllers","app.filters","app.services","templates"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,o){o.html5Mode(!0),e.otherwise("/"),t.state("homepage",{url:"/"}),t.state("database",{url:"/:database",templateUrl:"database.html",controller:"DatabaseCtrl"}),t.state("database.collection",{url:"/:collection",parent:"database",templateUrl:"collection.html",controller:"CollectionCtrl"})}]),angular.module("app.controllers",[]),angular.module("app.controllers").controller("AppCtrl",["$rootScope","$scope","$mdSidenav","$state","Databases",function(t,e,o,a,n){e.toggleSidenav=function(t){o(t).toggle()},t.server="localhost",t.database=null,t.collection=null,e.databases=[],n.get().$promise.then(function(t){e.databases=t.databases}),t.go=function(t,e){a.go(t,e)}}]),angular.module("app.controllers").controller("CollectionCtrl",["$rootScope","$scope","Model","$stateParams","$mdDialog","$mdSidenav",function(t,e,o,a,n,l){t.collection=a.collection,e.data=[],l("left").close(),o.query({database:t.database,collection:t.collection}).$promise.then(function(t){e.data=t}),e.showConfirm=function(e,a){var l=n.confirm().title("Are you sure you want to delete this entry?").content("You will not be able to cancel it.").ok("Delete").cancel("Cancel").targetEvent(e);n.show(l).then(function(){console.log("Delete the object "+a),o["delete"]({database:t.database,collection:t.collection,id:a}).$promise.then(function(t){console.log("ok",t)})})},e.showEdit=function(t,o){n.show({controller:c,templateUrl:"dialogNewEntry.html",data:o,targetEvent:t}).then(function(t){e.data.push(t.data)},function(){})},e.newEntry=function(t){n.show({controller:c,templateUrl:"dialogNewEntry.html",data:{},targetEvent:t}).then(function(t){e.data.push(t.data)},function(){})};var c=["$scope","$mdDialog","Model","data",function(e,o,a,n){e.object=n._id?n:{name:"ron",occupation:"coder"},e.cancel=function(){o.cancel()},e.save=function(){e.object._id?a.update({database:t.database,collection:t.collection,id:e.object._id},e.object).$promise.then(function(t){o.hide(t)}):a.save({database:t.database,collection:t.collection},e.object).$promise.then(function(t){o.hide(t)})}}]}]).directive("jsonTextarea",function(){return{restrict:"A",require:"ngModel",link:function(t,e,o,a){a.$formatters.push(function(t){return JSON.stringify(t,void 0,2)}),a.$parsers.push(function(t){try{var e=JSON.parse(t);return a.$setValidity("json",!0),e}catch(o){return void a.$setValidity("json",!1)}})}}}),angular.module("app.controllers").controller("DatabaseCtrl",["$rootScope","$scope","Collections","$stateParams",function(t,e,o,a){t.database=a.database,e.collections=[],o.get({database:t.database}).$promise.then(function(o){e.collections=o.collections,t.collection=e.collections[0]?e.collections[0].name:null,t.collection&&t.go("database.collection",{collection:t.collection})})}]),angular.module("app.filters",[]).filter("json",function(){return function(t){return JSON.stringify(t,void 0,2)}}),angular.module("app.services",["ngResource"]).factory("Databases",["$resource",function(t){return t("/api/databases")}]).factory("Collections",["$resource",function(t){return t("/api/collections/:database",{database:"@database"})}]).factory("Model",["$resource",function(t){return t("/api/model/:database/:collection/:id",{database:"@database",collection:"@collection",id:"@id"},{update:{method:"PUT"}})}]);